user  nginx;
worker_processes  auto;

load_module modules/ngx_http_image_filter_module.so;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;
    
    # Marketing - forwards to the static frontend
    server {
      listen 80;
      # todo: local and released domain names for simplicity
      server_name marketing.ecommerce-store-builder.dev marketing.ecommerce-store-builder.dev;
      location / {
        proxy_pass http://frontend_marketing;
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
      }
    }
    
    # Registration - forwards to the registration frontend
    server {
      listen 80;
      # todo: local and released domain names for simplicity
      server_name registration.ecommerce-store-builder.dev registration.ecommerce-store-builder.dev;
      location / {
        proxy_pass http://frontend_registration;
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
      }
    }
    
    # Management - forwards to the management frontend
    # All accounts use the same domain for access
    server {
      listen 80;
      # todo: local and released domain names for simplicity
      server_name management.ecommerce-store-builder.dev management.ecommerce-store-builder.dev;
      location /media {
        # proxy requests to the bucket hosted by minio
        # https://docs.min.io/docs/setup-nginx-proxy-with-minio.html
        proxy_pass http://infra_minio:9000;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        chunked_transfer_encoding off;   
        # http://nginx.org/en/docs/http/ngx_http_image_filter_module.htm
        image_filter test;     
        image_filter_buffer 20M;
        image_filter_interlace on;
        image_filter crop 200 200;
        image_filter_jpeg_quality 95;
      }
      
      location / {
        proxy_pass http://frontend_management;
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
      }
    }
    
    # Shopping site - forwards to the shopping frontend
    # Accounts have both a default domain and a custom domain for access
    # Defaults domain in the form example1.ecommerce-store-builder.dev and custom domains in the form example1.io
    # this will probably require its own nginx because it will need to respond to all hosts without 
    # fallback because it is up to the frontend behind it to perform the lookup of hostname to account
    server {
      listen 80;
      # todo: local and released domain names for simplicity
      server_name example1.ecommerce-store-builder.dev example2.ecommerce-store-builder.dev example3.ecommerce-store-builder.dev example1.io example2.io example3.io example1.ecommerce-store-builder.dev example2.ecommerce-store-builder.dev example3.ecommerce-store-builder.dev;
      location / {
        proxy_pass http://frontend_shopping;
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
      }
    }
    
    # Admin site - forwards to the admin frontend
    # todo: Add some other basic security at this layer such as ip filtering
    server {
      listen 80;
      server_name admin.ecommerce-store-builder.dev admin.ecommerce-store-builder.dev;
      location / {
        proxy_pass http://frontend_admin;
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
      }
    }
    
    # Ingress fallback
    # if none of the above match then this will be served
    # Provides a default landing page and health endpoints (with logging turned off) 
    server {
        listen 80;
        server_name *.ecommerce-store-builder.dev *.ecommerce-store-builder.dev;
    
        location /health/alive {
            access_log off;
            default_type text/plain;
            return 200 "Healthy";
        }
        
        location /health/ready {
            access_log off;
            default_type text/plain;
            return 200 "Healthy";
        }
        
        location / {
            root   /usr/share/nginx/html;
        }
    }
}

